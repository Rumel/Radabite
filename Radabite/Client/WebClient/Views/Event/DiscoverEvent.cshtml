@using Radabite.Backend.Database
@using Radabite.Client.WebClient.Models

@{
	ViewBag.Title = "Discover Event";
}

@model UserModel

<div class="row">
	<hgroup class="title">
		<h2>@User.Identity.Name's @ViewBag.Message</h2>
	</hgroup>

</div>

<div class="row">
	<div class="large-4 medium-4 columns">
		<table style="width: 100%">
	        <thead><tr><th style="text-align: center">Friends</th></tr></thead>
		    @Html.Partial("~/Client/WebClient/Views/Shared/_UserTable.cshtml", @Model.Friends)
        </table>
	</div>
	<div class="large-8 medium-8 columns" id="event-container">
        <div id="invitationList">
            @Html.Partial("~/Client/WebClient/Views/Event/_DiscoverInvitationList.cshtml", Model)
        </div>
		<div class="button-bar">
			<ul class="button-group round">
				<li><a href="#all" class="small button secondary" onclick="Sort(this, '@Url.Action("/AllEvents")')">All</a></li>
				<li><a href="#nearby" class="small button secondary" onclick="Sort(this, '@Url.Action("/SortEventsLocation")')">Nearby</a></li>
				<li><a href="#upcoming" class="small button secondary" onclick="Sort(this, '@Url.Action("/SortEventsTime")')">Upcoming</a></li>
			</ul>
		</div>
		<div id="discoverList">
			@Html.Partial("~/Client/WebClient/Views/Event/_EventList.cshtml", Model.DiscoverEvents)
		</div>
	</div>
</div>

<script type="text/javascript">
	var userLat;
	var userLong;
	var act;
	function positionFailD(err) {
		userLat = -1000;
		userLong = -1000;
	}
	function positionSuccessD(position) {
		var resultDiv = $('#discoverList');

		var coords = position.coords || position.coordinate || position;
		userLat = coords.latitude;
		userLong = coords.longitude;

		$.ajax({
			url: act,
			type: 'POST',
			dataType: "json",
			data: {
				userLat: userLat,
				userLong: userLong
			},
			dataType: "html",
			success: function (response) {
				resultDiv.html('');
				resultDiv.html(response);
			}
		});
	}

	function Sort(a, action) {
		//Sets location to current location if possible, else starts at a default location
		if (navigator.geolocation) {
			act = action;
			navigator.geolocation.getCurrentPosition(positionSuccessD, positionFailD);
		} else {
			positionFail(-1);
		}
	}

    function processInvitationResponse(a, action) {
        var container = $(a).parents('div#event-container');
        var resultDiv = $($(a).attr('href'), container);
        console.log(container);
        console.log(resultDiv);

        var eId = $(a).parent().siblings('div#eventId').text();
        var uId = @Model.User.Id
        console.log(eId + ", " + uId);
        $.ajax({
            url: action,
            type: 'POST',
            dataType: "json",
            data: {
                userId: uId,
                eventId: eId,
                response: $(a).text()
            },
            dataType: "html",
            success: function(response) {
                resultDiv.html('');
                resultDiv.html(response);
            }
        });
    }
</script>
